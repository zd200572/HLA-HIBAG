{
    "collab_server" : "",
    "contents" : "#install.packages(\"radmixture\")\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    http://shiny.rstudio.com/\n# download.file(url = 'https://github.com/wegene-llc/radmixture/raw/master/data/globe4.alleles.RData', destfile = 'globe4.alleles.RData')\n# download.file(url = 'http://public-html.biostat.washington.edu/~bsweir/HIBAG/param/Asian-HLA4-hg19.RData', destfile = 'Asian-HLA4-hg19.RData')\n\n\nlibrary(shiny)\nlibrary(HIBAG)\n# Define UI for application that draws a histogram\nui <- fluidPage(\n  \n  # Application title\n  titlePanel(\"HLA分型小工具\"),\n  \n  # Sidebar with a slider input for number of bins \n  sidebarLayout(\n    sidebarPanel(\n       fileInput(\"file1\", \"Choose txt File\",\n                multiple = FALSE,\n                accept = c(\"text/csv\", \"text/comma-separated-values,text/plain\", \".txt\")),\n      tags$hr(),\n      selectInput(\"variable\", \"请选择一种参考数据模型:\",\n                  list(\"亚洲人\" = \"Asian\", \n                       \"European\" = \"European\", \n                       \"Hispanic\" = \"Hispanic\",\n                       \"African\" = \" African\"\n                  ))\n      #checkboxInput(\"outliers\", \"Show outliers\", FALSE)\n    ),\n    \n    # Show a plot of the generated distribution\n    mainPanel(\n      h4(\"你的HLA分型结果和准确概率为:\"),\n      tableOutput(outputId = 'test')\n  )\n))\n\n# Define server logic required to calculate ancestry\nserver <- function(input, output) {\n  options(shiny.maxRequestSize=30*1024^2)\n  output$test <- renderTable({ \n    \"You have selected this\"\n    inFile <- input$file1\n    if(is.null(inFile))     \n      return(NULL) \n    trained.Rdata <- paste(input$variable, sep = \"\", \"-HLA4-hg19.RData\")\n    load(trained.Rdata)\n    A.model <- hlaModelFromObj(HLA4[['A']])\n    B.model <- hlaModelFromObj(HLA4[['B']])\n    C.model <- hlaModelFromObj(HLA4[['C']])\n    DRB1.model <- hlaModelFromObj(HLA4[['DRB1']])\n    DQA1.model <- hlaModelFromObj(HLA4[['DQA1']])\n    DQB1.model <- hlaModelFromObj(HLA4[['DQB1']])\n    DPB1.model <- hlaModelFromObj(HLA4[['DPB1']])\n    cmd = paste('./plink/plink --23file', inFile$datapath, 'make-bed --out',sep = \" \", inFile)\n    system(cmd, wait = TRUE)\n    bed <- paste(inFile, '.bed',sep = \"\")\n    fam <- paste(inFile, '.fam',sep = \"\")\n    bim <- paste(inFile, '.bim',sep = \"\")\n    yourgeno <- hlaBED2Geno(bed.fn=bed, fam.fn=fam, bim.fn=bim)\n    # HLA imputation at HLA-A\n    \n    A.guess <- predict(A.model, yourgeno, type=\"response+prob\",match.type='Position')\n    \n    \n    B.guess <- predict(B.model, yourgeno, type=\"response+prob\",match.type='Position')\n    \n    \n    C.guess <- predict(C.model, yourgeno, type=\"response+prob\",match.type='Position')\n    \n    DRB1.guess <- predict(DRB1.model, yourgeno, type=\"response+prob\",match.type='Position')\n    \n    DQA1.guess <- predict(DQA1.model, yourgeno, type=\"response+prob\",match.type='Position')\n    \n    DQB1.guess <- predict(DQB1.model, yourgeno, type=\"response+prob\",match.type='Position')\n    \n    DPB1.guess <- predict(DPB1.model, yourgeno, type=\"response+prob\",match.type='Position')\n    if(is.null(A.guess))     \n      return(NULL) \n    data.frame(A_allele1=A.guess$value$allele1, A_allele2=A.guess$value$allele2, A_prob=A.guess$value$prob,\n               B_allele1=B.guess$value$allele1, B_allele2=B.guess$value$allele2, B_prob=B.guess$value$prob,\n               C_allele1=C.guess$value$allele1, C_allele2=C.guess$value$allele2, C_prob=C.guess$value$prob,\n               DRB1_allele1=DRB1.guess$value$allele1, DRB1_allele2=DRB1.guess$value$allele2, DRB1_prob=DRB1.guess$value$prob,\n               DQA1_allele1=DQA1.guess$value$allele1, DQA1_allele2=DQA1.guess$value$allele2, DQA1_prob=DQA1.guess$value$prob,\n               DQB1_allele1=DQB1.guess$value$allele1, DQB1_allele2=DQB1.guess$value$allele2, DQB1_prob=DQB1.guess$value$prob,\n               DPB1_allele1=DPB1.guess$value$allele1, DPB1_allele2=DPB1.guess$value$allele2, DPB1_prob=DPB1.guess$value$prob)\n  })\n}\n# Run the application \nshinyApp(ui = ui, server = server)",
    "created" : 1560413346052.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3870349479",
    "id" : "6EFAA1EB",
    "lastKnownWriteTime" : 1560501826,
    "last_content_update" : 1560501826955,
    "path" : "/Volumes/MacOS/BioData/R/HLA-HIBAG/app.R",
    "project_path" : "app.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}